<!-- 
  Nicholas Saney 
  
  Created: June 04, 2015
  
  build.xml 
  Apache Ant buildfile 
  
-->

<project name="QuadradoAndroid" default="all" basedir=".">
  
  <!-- Ant properties -->
  <property environment="env"/>
  <property name="build.sysclasspath" value="last"/> 
  
  <!-- Build properties -->
  <property name="version"      value="1.7"/>
  <property name="source"       value="src"/>
  <property name="build"        value="bin"/>
  <property name="documents"    value="doc"/>
  <property name="deploy"       value="Deploy_${ant.project.name}"/>
  <property name="jar_filename" value="${ant.project.name}.jar"/>
  
  <!-- Library properties -->
  <property name="licenses"     value="licenses"/>
  <property name="jar_quadrado" value="Quadrado.jar"/>
  <property name="jar_xom"      value="xom-1.2.10.jar"/>
  <property name="jar_xerces"   value="dtd-xercesImpl.jar"/>
  <property name="jar_jlayer"   value="jl1.0.1.jar"/>
  <property name="jars"         value="${jar_quadrado}:${jar_xom}:${jar_xerces}:${jar_jlayer}"/> <!-- : -->
  <property name="jars_"        value="[empty]"/>
  <script language="javascript">
    var $jars = project.getProperty("jars");
    project.setProperty("jars_", $jars.replaceAll(":", " "));
  </script>
  
  <!-- Android Library properties -->
  <property name="android_platform" value="21"/>
  <property name="jar_android"      value="${env.ANDROID_HOME}/platforms/android-${android_platform}/android.jar"/>
  <script language="javascript">
    var $jar_android = project.getProperty("jar_android");
    var $jars = project.getProperty("jars");
    project.setProperty("jars", $jar_android + ":" + $jars);
  </script>
  
  <!-- clean targets -->
  <target name="clean-build">
    
    <delete dir="${build}"/>
    
  </target>
  
  <target name="clean-deploy">
    
    <delete dir="${deploy}"/>
    
  </target>
  
  <target name="clean-documents">
    
    <delete dir="${documents}"/>
    
  </target>
  
  <target name="clean" depends="clean-build,clean-deploy,clean-documents"/>

  
  <!-- document target -->
  <target name="document" depends="clean-documents">
    
    <mkdir dir="${documents}"/>
    
    <javadoc 
      sourcepath="${source}" 
      destdir="${documents}" 
      classpath="${jars}" 
      access="private" 
      windowtitle="${ant.project.name} API" 
    >
      <link 
        offline="true" 
        href="http://developer.android.com/reference/" 
        packagelistLoc="${env.ANDROID_HOME}/docs/reference"
      />
      <link
        offline="true" 
        href="http://www.xom.nu/apidocs/" 
        packagelistLoc="./_package-lists/nu.xom" 
      />
      <link
        offline="true" 
        href="http://www.javazoom.net/javalayer/docs/docs1.0/" 
        packagelistLoc="./_package-lists/jlayer" 
      />
    </javadoc>
    
  </target>
  
  
  <!-- pre-compile target -->
  <target name="herald">
    
    <echo message="ANT_HOME = ${env.ANT_HOME}"/>
    <echo message="JAVA_HOME = ${env.JAVA_HOME}"/>
    <echo message="java.version = ${java.version}"/>
    <echo message="target version = ${version}"/>
    <echo message="ANDROID_HOME = ${env.ANDROID_HOME}"/>
    <echo message="android_platform = ${android_platform}"/>
    <echo message="jars = ${jars}"/>
    
  </target>
  
  <target name="-pre-compile">
  </target>
  
  
  <!-- compile target -->
  <target name="-compile">
    
    <mkdir dir="${build}"/>
    
    <javac 
      srcdir="${source}" 
      destdir="${build}" 
      classpath="${jars}" 
      source="${version}" 
      target="${version}" 
      compiler="javac${version}"
      includeAntRuntime="true" 
      debug="on" 
      debuglevel="lines,vars,source"
      createMissingPackageInfoClass="false"
    >
      
      <compilerarg value="-Xlint:unchecked"/>
      <!--compilerarg value="-version"/-->
      
    </javac>
    
  </target>
  
  <target name="-post-compile">
  </target>
  
  <target name="build" depends="herald,clean-build,-pre-compile,-compile,-post-compile"/>
  
  
  <!-- deploy target -->
  <target name="redeploy" depends="clean-deploy">
    
    <mkdir dir="${deploy}"/>
    
    <jar destfile="${deploy}/${jar_filename}">
      <fileset dir="${build}" />
      <manifest>
        <attribute name="Class-Path" value="${jars_}"/>
      </manifest>
    </jar>
    
    <copy todir="${deploy}">
      <fileset dir="." includes="${jars_} ${licenses}/**" />
    </copy>
    
  </target>
  
  <target name="deploy" depends="build,redeploy"/>

  
  <!-- all target -->
  <target name="all" depends="document,deploy"/>
  
</project>
